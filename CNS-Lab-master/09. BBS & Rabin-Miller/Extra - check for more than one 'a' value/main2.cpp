/* Author : AKSHAT AGARWAL */

#include <bits/stdc++.h>
using namespace std;

int randInRange(int low, int high) // excluding high and low
{
    return rand()%(high-(low+1)) + (low+1) ;
}

int genPrime3mod4()
{
    while(true)
    {
        int num = randInRange(10000,100000); // to generate large random number
        if(num%4 != 3) continue;

        bool prime = true;
        for(int i=2; i<=sqrt(num); i++)
        {
            if(num % i == 0)
            {
                prime = false;
                break;
            }
        }
        if(prime) return num;
    }
}

int bbs(int p, int q)
{
    long long n = (long long)p*q ;

    long long s; // non-zero and relatively prime to n
    do{ s = rand(); } while(s%p==0 || s%q==0 || s==0);

    int B = 0;
    long long x = (s*s) % n;
    for(int i=0; i<10; i++) // to generate 10 bit output
    {
        x = (x*x) % n;
        B = B<<1 | (x & 1); // x%2 = x&1
    }

    if(B==0) return bbs(p,q); // check that the number generated should not be zero
    cout<<"Blum Blum Shub"<<endl<<"--------------"<<endl;
    cout<<"p = "<< p <<"\nq = "<< q <<"\nn = "<< n <<"\ns = "<< s <<endl;
    return B;
}

// (a pow b)%n
int powModN(int a, int b, int n)
{
	int res=1;
	for(int i=0; i<b; i++)
	{
        res = (res * a) % n;
	}
	return res;
}

bool rabinMiller(int n)
{
    int k = 0;
    int q = n-1;
    while(q % 2 == 0)
    {
        q = q/2 ;
        k++ ;
    }

    cout << "\nRabin Miller(" << n << ")\n-----------------" << endl;
    cout << n-1 << " = 2^" << k << " * " << q << endl;
    cout << "k = " << k << "\nq = " << q;

    for(int i=0; i<4; i++) // check for 4 different values of a
    {
        bool flag = false;
        int a = randInRange(1, n-1);
        cout << "\na = " << a << endl;

        // if (a pow q)%n == 1
        if(powModN(a,q,n) == 1)
        {
            cout << "Inconclusive" << endl;
            continue;
        }
        for(int j=0; j<=k-1; j++)
        {
            if(powModN(a, pow(2,j)*q, n) == n-1)
            {
                flag = true;
                cout << "Inconclusive" << endl;
                break;
            }
        }
        if(flag == true) continue;
        else return false;
    }
    return true;

}

int main()
{
    srand(time(NULL));
    int p = genPrime3mod4(); // large prime number (p%4=3)
    int q = genPrime3mod4(); // large prime number (q%4=3)
    int randNum = bbs(p, q);
    cout << "Random number generated by BBS = " << randNum << endl;

    bool isPrime = true;
    isPrime = rabinMiller(randNum);
    if(!isPrime)  cout << "Composite" << endl << endl;
}

/**************** output-2 **************
Blum Blum Shub
--------------
p = 31151
q = 41543
n = 1294105993
s = 30521
Random number generated by BBS = 967

Rabin Miller(967)
-----------------
966 = 2^1 * 483
k = 1
q = 483
a = 831
Inconclusive

a = 677
Inconclusive

a = 226
Inconclusive

a = 619
Inconclusive

****************************************/
